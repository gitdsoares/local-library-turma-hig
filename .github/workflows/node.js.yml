
name: Node.js Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
#STEP1 - Testes unit√°rios

jobs:
  STEP1:
    name: Build and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
       

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test --if-present

#STEP2 - Linter
  
  STEP2:
    name: Lint code base
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Run Linter against code base #
      - name: Lint Code Base
        uses: github/super-linter@v3
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_CSS: true
          VALIDATE_MARKDOWN: true
          JAVASCRIPT_DEFAULT_STYLE: prettier

#STEP3 - Sonarcloud

  STEP3:
    name: Quality Test SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Build and analyze
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}          
  
#STEP4 - HOM - Deploy
  
  STEP4:
    runs-on: ubuntu-latest
    needs: [STEP1, STEP2]
    environment:
      name: 'HOM'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to build on Heroku
          fetch-depth: 0
      
      - name: Login Heroku
        uses: akhileshns/heroku-deploy@v3.10.9 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: projeto-gitdsoares
          heroku_email: dsoares.dvd@gmail.com
          justlogin: true
      
      - name: Set Heroku remote
        run: heroku git:remote -a projeto-gitdsoares
      
      - name: Set env variables
        run: |
          heroku config:set MONGODB_URI=${{secrets.DB_CS_HOM}}
      
      - name: Push code to Heroku
        run: git push heroku main

#STEP5 - PROD - Deploy
  
  STEP5:
    runs-on: ubuntu-latest
    needs: [STEP2,STEP3,STEP4]
    environment:
      name: 'PROD'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to build on Heroku
          fetch-depth: 0
      
      - name: Login Heroku
        uses: akhileshns/heroku-deploy@v3.10.9 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: projeto-gitdsoares-prod
          heroku_email: dsoares.dvd@gmail.com
          justlogin: true
      
      - name: Set Heroku remote
        run: heroku git:remote -a projeto-gitdsoares-prod
      
      - name: Set env variables
        run: |
          heroku config:set NODE_ENV=production
          heroku config:set MONGODB_URI=${{secrets.DB_CS_PRD}}
      
      - name: Push code to Heroku
        run: git push heroku main